/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as AboutRouteImport } from './routes/about'
import { Route as IndexRouteImport } from './routes/index'
import { Route as DailyIndexRouteImport } from './routes/daily/index'
import { Route as ArchivesIndexRouteImport } from './routes/archives/index'

const AboutRoute = AboutRouteImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const DailyIndexRoute = DailyIndexRouteImport.update({
  id: '/daily/',
  path: '/daily/',
  getParentRoute: () => rootRouteImport,
} as any)
const ArchivesIndexRoute = ArchivesIndexRouteImport.update({
  id: '/archives/',
  path: '/archives/',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/archives': typeof ArchivesIndexRoute
  '/daily': typeof DailyIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/archives': typeof ArchivesIndexRoute
  '/daily': typeof DailyIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/archives/': typeof ArchivesIndexRoute
  '/daily/': typeof DailyIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/about' | '/archives' | '/daily'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/about' | '/archives' | '/daily'
  id: '__root__' | '/' | '/about' | '/archives/' | '/daily/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AboutRoute: typeof AboutRoute
  ArchivesIndexRoute: typeof ArchivesIndexRoute
  DailyIndexRoute: typeof DailyIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/daily/': {
      id: '/daily/'
      path: '/daily'
      fullPath: '/daily'
      preLoaderRoute: typeof DailyIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/archives/': {
      id: '/archives/'
      path: '/archives'
      fullPath: '/archives'
      preLoaderRoute: typeof ArchivesIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AboutRoute: AboutRoute,
  ArchivesIndexRoute: ArchivesIndexRoute,
  DailyIndexRoute: DailyIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
